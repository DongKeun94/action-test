name: Deploy to SPC

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_RESPONSE_CHECKSUM_VALIDATION: when_required
      AWS_REQUEST_CHECKSUM_CALCULATION: when_required
      AWS_STS_REGIONAL_ENDPOINTS: regional
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Debug Print AWS Environment Variables
        run: |
          echo "Checking for pre-existing AWS environment variables..."
          env | grep AWS_ || echo "No AWS variables found."

      - name: Set env
        id: set_env_vars
        run: |
          echo "AWS_ROLE_ARN=${{ secrets.SPC_ROLE_ARN }}" >> $GITHUB_ENV
          echo "SPC_REGIONAL_DOMAIN=us-east-1.samsungspc.com" >> $GITHUB_ENV
          echo "SPC_AUDIENCE=sts.samsungspc.com" >> $GITHUB_ENV
          echo "AWS_ENDPOINT_URL_STS=https://sts.samsungspc.com" >> $GITHUB_ENV
          # Set the SPC ECR registry URL for the docker login command
          echo "SPC_ECR_REGISTRY=137260306892.dkr.ecr.us-east-1.samsungspc.com" >> $GITHUB_ENV
          # Add the specific ECR API endpoint URL for the AWS SDK
          echo "AWS_ENDPOINT_URL_ECR=https://ecr.us-east-1.samsungspc.com" >> $GITHUB_ENV
          echo "IMAGE_REPO=dsung-test" >> $GITHUB_ENV

      - name: Configure SPC credential
        id: config_spc_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: ${{ env.SPC_AUDIENCE }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: "us-east-1"

      - name: Login to SPC ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2